localRayfield = loadstring(game:HttpGet('https://sirius.menu/rayfield'))()

local Window = Rayfield:CreateWindow({
   Name = "💀Lastbreath hub |v0.1💀",
   LoadingTitle = "By Last Breath Sans",
   LoadingSubtitle = "by Last Breath Sans On Discord",
   ConfigurationSaving = {
      Enabled = true,
      FolderName = nil, -- Create a custom folder for your hub/game
      FileName = "Last breath hub"
   },
   Discord = {
      Enabled = false,
      Invite = "noinvitelink", -- The Discord invite code, do not include discord.gg/. E.g. discord.gg/ABCD would be ABCD
      RememberJoins = true -- Set this to false to make them join the discord every time they load it up
   },
   KeySystem = true, -- Set this to true to use our key system
   KeySettings = {
      Title = "Lastbreah Hub | Key",
      Subtitle = "Key:LastbreathV0.1 hubrelease",
      Note = "key:Lastbreathv0.1 hubrelease",
      FileName = "Key", -- It is recommended to use something unique as other scripts using Rayfield may overwrite your key file
      SaveKey = true, -- The user's key will be saved, but if you change the key, they will be unable to use your script
      GrabKeyFromSite = false, -- If this is true, set Key below to the RAW site you would like Rayfield to get the key from
      Key = {"Lastbreathv0.1 hubrelease"} -- List of keys that will be accepted by the system, can be RAW file links (pastebin, github etc) or simple strings ("hello","key22")
   }
})

local Tab = Window:CreateTab("🏠Main", nil) -- Title, Image
local Section = Tab:CreateSection("Main")

Rayfield:Notify({
   Title = "You Execute Lastbreath Hub v0.1",
   Content = "English Or Spanish (Jk]",
   Duration = 5,
   Image = nil,
   Actions = { -- english or spanish
      Ignore = {
         Name = "English or spanish",
         Callback = function()
         print("The user tapped english)
      end
   },
},})
})
local Button = Tab:CreateButton({
   Name = "Aimbot",
   Callback = function()
   -- The function that takes place when 
local aimFOV = 20 -- Default FOV
local menuOpen = false
local smoothingFactor = 10 -- Adjust this value for smoothing, higher values result in smoother aiming.
 
local function findNearestTarget()
    local ply = LocalPlayer()
    local players = player.GetAll()
    local nearestPlayer, nearestDist
 
    for _, target in ipairs(players) do
        if target ~= ply and target:Alive() and target:Health() > 0 and target:GetPos():Distance(ply:GetPos()) < 99999 then
            local headPos = target:GetBonePosition(target:LookupBone("ValveBiped.Bip01_Head1"))
            local dist = headPos:Distance(ply:EyePos())
 
            if not nearestDist or dist < nearestDist then
                nearestPlayer = target
                nearestDist = dist
            end
        end
    end
 
    return nearestPlayer
end
 
local function aimbot()
    if input.IsKeyDown(KEY_E) then
        local ply = LocalPlayer()
        local target = findNearestTarget()
 
        if target then
            local headPos = target:GetBonePosition(target:LookupBone("ValveBiped.Bip01_Head1"))
            local viewDir = ply:EyeAngles():Forward()
            local aimDir = (headPos - ply:EyePos()):GetNormalized()
 
            local angle = math.deg(math.acos(viewDir:Dot(aimDir)))
 
            if angle < aimFOV then
                local targetAngle = (headPos - ply:GetShootPos()):Angle()
                local currentAngle = ply:EyeAngles()
                local smoothedAngle = LerpAngle(1 - (smoothingFactor / 100), currentAngle, targetAngle)
                ply:SetEyeAngles(smoothedAngle)
            end
        end
    end
end
 
local function toggleMenu()
    menuOpen = not menuOpen
 
    if menuOpen then
        local frame = vgui.Create("DFrame")
        frame:SetSize(300, 100)
        frame:Center()
        frame:SetTitle("Aimbot Menu")
        frame:SetDraggable(false)
        frame:MakePopup()
 
        local slider = vgui.Create("DNumSlider", frame)
        slider:SetPos(10, 30)
        slider:SetSize(280, 20)
        slider:SetText("Aimbot FOV")
        slider:SetMin(1)
        slider:SetMax(180)
        slider:SetValue(aimFOV)
        slider.OnValueChanged = function(_, val)
            aimFOV = val
        end
    else
        for _, v in ipairs(vgui.GetWorldPanel():GetChildren()) do
            if v:GetName() == "DFrame" and v:GetTitle() == " endr's Aimbot Menu" then
                v:Remove()
            end
        end
    end
end
 
local function main()
    hook.Add("Think", "Aimbot", aimbot)
    hook.Add("HUDPaint", "AimbotIndicator", function()
        local onColor = Color(0, 255, 0)
        local offColor = Color(255, 0, 0)
        local text = input.IsKeyDown(KEY_E) and "ON" or "OFF"
        local color = input.IsKeyDown(KEY_E) and onColor or offColor
        draw.SimpleText(text, "DermaDefault", ScrW() / 2, ScrH() / 2 + 20, color, TEXT_ALIGN_CENTER, TEXT_ALIGN_CENTER)
    end)
    hook.Add("Think", "AimbotMenu", function()
        if input.IsKeyDown(KEY_INSERT) then
            toggleMenu()
            input.SelectWeapon(LocalPlayer():GetWeapon())
        end
    end)
end
 
main()the button is pressed
   end,
})

local Slider = Tab:CreateSlider({
   Name = "WalkSpeed",
   Info = "Walkspeed settings.", -- Speaks for itself, Remove if none.
   Range = {0, 300},
   Increment = 10,
   Suffix = "Bananas",
   CurrentValue = 16,
   Flag = "Idk", -- A flag is the identifier for the configuration file, make sure every element has a different flag if you're using configuration saving to ensure no overlaps
   Callback = function(Value)
   game.Player.LocalPlayer.Character.Humanoid.WalkSpeed = (Value)
   end,
})
